{"version":3,"sources":["components/Navbar.jsx","components/Textarea.jsx","components/AlertMsg.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","homeTitle","type","id","firstLink","role","style","backgroundColor","color","onClick","changeColorRGB","toggleButton","htmlFor","Textarea","useState","text","setText","heading","tabIndex","value","onChange","e","target","rows","placeholder","toUpperCase","length","showAlert","toLowerCase","newText","document","getElementById","select","navigator","clipboard","writeText","extraSpaces","split","join","AlertMsg","charAt","slice","message","defaultProps","secondLink","App","setMode","alert","setAlert","setTimeout","body","buttonText","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0MAIe,SAASA,EAAOC,GAC7B,OACE,qBACEC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,SAGE,sBAAKD,UAAU,kBAAf,UAIE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SACGH,EAAMI,YAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SAIE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,SACGH,EAAMO,gBAYb,sBACEN,UAAU,YACVO,KAAK,QACL,aAAW,6BAHb,UAKE,wBACEP,UAAU,MACVQ,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAC5CC,QAASZ,EAAMa,eAHjB,eAOA,wBACEZ,UAAU,MACVQ,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAC5CC,QAASZ,EAAMa,eAHjB,eAOA,wBACEZ,UAAU,MACVQ,MAAO,CAAEC,gBAAiB,WAAYC,MAAO,SAC7CC,QAASZ,EAAMa,eAHjB,gBAOA,wBACEZ,UAAU,MACVQ,MAAO,CAAEC,gBAAiB,QAASC,MAAO,SAC1CC,QAASZ,EAAMa,eAHjB,gBAOA,wBACEZ,UAAU,MACVQ,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAC5CC,QAASZ,EAAMa,eAHjB,mBAmBF,sBAAKZ,UAAU,mCAAf,UACE,uBACEA,UAAU,mBACVI,KAAK,WACLC,GAAG,yBACHM,QAASZ,EAAMc,eAEjB,uBACEb,UAAS,gCACQ,UAAfD,EAAME,KAAmB,OAAS,SAEpCa,QAAQ,yBAJV,kCCvGG,SAASC,EAAShB,GAC/B,MAAwBiB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA4CA,OACE,qCACE,sBAAKlB,UAAU,iBAAf,UACE,6BAAKD,EAAMoB,UACX,0BACEC,SAAS,IACTC,MAAOJ,EACPK,SAnCR,SAAuBC,GACrBL,EAAQK,EAAEC,OAAOH,QAmCXrB,UAAU,oBACVK,GAAG,UACHoB,KAAK,IACLC,YAAY,uCACZlB,MACiB,SAAfT,EAAME,KACF,CAAEQ,gBAAiB,UAAWC,MAAO,SACrC,CAAED,gBAAiB,QAASC,MAAO,WAG3C,wBACEN,KAAK,SACLJ,UAAU,4BACVW,QA/DR,WACEO,EAAQD,EAAKU,eACG,IAAhBV,EAAKW,OACD7B,EAAM8B,UAAU,0BAA2B,WAC3C9B,EAAM8B,UAAU,oBAAqB,YA4DnCT,SAAS,IAJX,kCAQA,wBACEhB,KAAK,SACLJ,UAAU,uCACVW,QAhER,WACEO,EAAQD,EAAKa,eACG,IAAhBb,EAAKW,OACD7B,EAAM8B,UAAU,0BAA2B,WAC3C9B,EAAM8B,UAAU,oBAAqB,YA6DnCT,SAAS,IAJX,kCAQA,wBACEhB,KAAK,SACLJ,UAAU,2BACVW,QA7DR,WACEO,EAAQ,IACQ,IAAhBD,EAAKW,OACD7B,EAAM8B,UAAU,UAAW,WAC3B9B,EAAM8B,UAAU,oBAAqB,YA0DnCT,SAAS,IAJX,wBAQA,wBACEhB,KAAK,SACLJ,UAAU,oCACVW,QA9DR,WACE,IAAIoB,EAAUC,SAASC,eAAe,WACtCF,EAAQG,SACRC,UAAUC,UAAUC,UAAUN,EAAQV,OACtB,IAAhBJ,EAAKW,OACD7B,EAAM8B,UAAU,sBAAuB,WACvC9B,EAAM8B,UAAU,oBAAqB,YAyDnCT,SAAS,IAJX,uBAQA,wBACEhB,KAAK,SACLJ,UAAU,yBACVW,QA7DR,WACE,IAAI2B,EAAcrB,EAAKsB,MAAM,QAC7BrB,EAAQoB,EAAYE,KAAK,MACT,IAAhBvB,EAAKW,OACD7B,EAAM8B,UAAU,uBAAwB,WACxC9B,EAAM8B,UAAU,oBAAqB,YAyDnCT,SAAS,IAJX,oCASF,sBAAKpB,UAAU,iBAAf,UACE,mDACA,8BACmB,IAAhBiB,EAAKW,OAAeX,EAAKsB,MAAM,kBAAkBX,OAAS,EAD7D,cAEOX,EAAKW,OAFZ,eAEgCX,EAAKsB,MAAM,KAAKX,OAAS,EAFzD,aAIA,8BACmB,IAAhBX,EAAKW,OAAe,KAAQX,EAAKsB,MAAM,KAAKX,OAAS,EADxD,mBAGA,yCACA,4BACmB,IAAhBX,EAAKW,OACF,2DACAX,UCrHC,SAASwB,EAAS1C,GAC/B,IAAoBwB,EAGpB,OACExB,EAAM8B,WACJ,sBACE7B,UAAS,sBAAiBD,EAAM8B,UAAUzB,KAAjC,gCACTG,KAAK,QAFP,UAIE,kCATcgB,EASMxB,EAAM8B,UAAUzB,KARjCmB,EAAEmB,OAAO,GAAGf,cAAgBJ,EAAEoB,MAAM,MAIzC,KAIwD,IACrD5C,EAAM8B,UAAUe,WFiHzB9C,EAAO+C,aAAe,CACpB1C,UAAW,WACXG,UAAW,OACXwC,WAAY,SGPCC,MAhHf,WAQE,MAAwB/B,mBAAS,SAAjC,mBAAOf,EAAP,KAAa+C,EAAb,KACA,EAA0BhC,mBAAS,MAAnC,mBAAOiC,EAAP,KAAcC,EAAd,KAEMrB,EAAY,SAACe,EAASxC,GAC1B8C,EAAS,CACPN,QAASA,EACTxC,KAAMA,IAER+C,YAAW,WACTD,EAAS,MACR,OAoCL,OACE,qCAiCM,cAACpD,EAAD,CACAK,UAAU,cACVG,UAAU,OAEVL,KAAMA,EACNY,aAzER,WACe,UAATZ,GACF+C,EAAQ,QACRhB,SAASoB,KAAK5C,MAAMC,gBAAkB,UACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,QAC5BmB,EAAU,6BAA8B,aAExCmB,EAAQ,SACRhB,SAASoB,KAAK5C,MAAMC,gBAAkB,QACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,QAC5BmB,EAAU,8BAA+B,aAgErCjB,eA5DR,SAAwBK,GACtB,IAAIoC,EAAapC,EAAKO,OAAO8B,UACV,MAAfD,GACFrB,SAASoB,KAAK5C,MAAMC,gBAAkB,UACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,SACJ,MAAf2C,GACTrB,SAASoB,KAAK5C,MAAMC,gBAAkB,UACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,SACJ,OAAf2C,GACTrB,SAASoB,KAAK5C,MAAMC,gBAAkB,WACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,SACJ,OAAf2C,GACTrB,SAASoB,KAAK5C,MAAMC,gBAAkB,QACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,SACJ,OAAf2C,IACTrB,SAASoB,KAAK5C,MAAMC,gBAAkB,UACtCuB,SAASoB,KAAK5C,MAAME,MAAQ,YA8C1B,cAAC+B,EAAD,CAAUZ,UAAWoB,IACjB,cAAClC,EAAD,CACEI,QAAQ,wBACRlB,KAAMA,EACN4B,UAAWA,QClGV0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BsB,K","file":"static/js/main.1e2e9ea9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.homeTitle}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.homeTitle}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                {props.firstLink}\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                {props.firstLink}\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\"> */}\r\n              {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/about\">\r\n                {props.secondLink}\r\n              </Link> */}\r\n              {/* <a className=\"nav-link\" aria-current=\"page\" href=\"/about\">\r\n                {props.firstLink}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div\r\n            className=\"btn-group\"\r\n            role=\"group\"\r\n            aria-label=\"Basic mixed styles example\"\r\n          >\r\n            <button\r\n              className=\"btn\"\r\n              style={{ backgroundColor: \"#bf1111\", color: \"white\" }}\r\n              onClick={props.changeColorRGB}\r\n            >\r\n              R\r\n            </button>\r\n            <button\r\n              className=\"btn\"\r\n              style={{ backgroundColor: \"#14871a\", color: \"white\" }}\r\n              onClick={props.changeColorRGB}\r\n            >\r\n              G\r\n            </button>\r\n            <button\r\n              className=\"btn\"\r\n              style={{ backgroundColor: \"darkblue\", color: \"white\" }}\r\n              onClick={props.changeColorRGB}\r\n            >\r\n              Bl\r\n            </button>\r\n            <button\r\n              className=\"btn\"\r\n              style={{ backgroundColor: \"brown\", color: \"white\" }}\r\n              onClick={props.changeColorRGB}\r\n            >\r\n              Br\r\n            </button>\r\n            <button\r\n              className=\"btn\"\r\n              style={{ backgroundColor: \"#ab0ca6\", color: \"white\" }}\r\n              onClick={props.changeColorRGB}\r\n            >\r\n              Pi\r\n            </button>\r\n          </div>\r\n          {/* <div className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </div> */}\r\n          <div className=\"form-check form-switch my-2 mx-3\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleButton}\r\n            />\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  homeTitle: PropTypes.string.isRequired,\r\n  firstLink: PropTypes.string.isRequired,\r\n  secondLink: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  homeTitle: \"My First\",\r\n  firstLink: \"Home\",\r\n  secondLink: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textarea(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  function myUpButton() {\r\n    setText(text.toUpperCase());\r\n    text.length !== 0\r\n      ? props.showAlert(\"Converted to Upper Case\", \"success\")\r\n      : props.showAlert(\"Text Box is Empty\", \"warning\");\r\n  }\r\n\r\n  function myLoButton() {\r\n    setText(text.toLowerCase());\r\n    text.length !== 0\r\n      ? props.showAlert(\"Converted to Lower Case\", \"success\")\r\n      : props.showAlert(\"Text Box is Empty\", \"warning\");\r\n  }\r\n\r\n  function inputOnChange(e) {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  function clearText() {\r\n    setText(\"\");\r\n    text.length !== 0\r\n      ? props.showAlert(\"Cleared\", \"success\")\r\n      : props.showAlert(\"Text Box is Empty\", \"warning\");\r\n  }\r\n\r\n  function copyText() {\r\n    let newText = document.getElementById(\"textBox\");\r\n    newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    text.length !== 0\r\n      ? props.showAlert(\"Copied to clipboard\", \"success\")\r\n      : props.showAlert(\"Text Box is Empty\", \"warning\");\r\n  }\r\n\r\n  function removeSpaces() {\r\n    let extraSpaces = text.split(/[ ]+/);\r\n    setText(extraSpaces.join(\" \"));\r\n    text.length !== 0\r\n      ? props.showAlert(\"Extra spaces removed\", \"success\")\r\n      : props.showAlert(\"Text Box is Empty\", \"warning\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\">\r\n        <h1>{props.heading}</h1>\r\n        <textarea\r\n          tabIndex=\"1\"\r\n          value={text}\r\n          onChange={inputOnChange}\r\n          className=\"form-control my-2\"\r\n          id=\"textBox\"\r\n          rows=\"6\"\r\n          placeholder=\"Type your text here and see magic...\"\r\n          style={\r\n            props.mode === \"dark\"\r\n              ? { backgroundColor: \"#0d416b\", color: \"white\" }\r\n              : { backgroundColor: \"white\", color: \"black\" }\r\n          }\r\n        ></textarea>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-success my-1 mx-1\"\r\n          onClick={myUpButton}\r\n          tabIndex=\"2\"\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-warning text-white my-1 mx-1\"\r\n          onClick={myLoButton}\r\n          tabIndex=\"3\"\r\n        >\r\n          Convert To Lowercase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger my-1 mx-1\"\r\n          onClick={clearText}\r\n          tabIndex=\"4\"\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-info text-white my-1 mx-1\"\r\n          onClick={copyText}\r\n          tabIndex=\"5\"\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-dark my-1 mx-1\"\r\n          onClick={removeSpaces}\r\n          tabIndex=\"6\"\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.length !== 0 ? text.split(/[ ][a-z0-9A-Z]/).length : 0} words\r\n          and {text.length} characters {text.split(\" \").length - 1} spaces\r\n        </p>\r\n        <p>\r\n          {text.length !== 0 ? 0.008 * text.split(\" \").length : 0} minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length === 0\r\n            ? \"Enter something in the text box above to preview it here\"\r\n            : text}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AlertMsg(props) {\r\n  const capitalize = (e) => {\r\n    return e.charAt(0).toUpperCase() + e.slice(1);\r\n  };\r\n  return (\r\n    props.showAlert && (\r\n      <div\r\n        className={`alert alert-${props.showAlert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.showAlert.type)}</strong> :{\" \"}\r\n        {props.showAlert.message}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\n// import DarkMode from \"./components/DarkMode\";\nimport Navbar from \"./components/Navbar\";\nimport Textarea from \"./components/Textarea\";\nimport { useState } from \"react\";\nimport AlertMsg from \"./components/AlertMsg\";\nimport React from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import PageNotFound from \"./components/PageNotFound\";\n\nfunction App() {\n  // setInterval(() => {\n  //   document.title  = \"Text Utils is Amazing\"\n  // }, 2000);\n  // setInterval(() => {\n  //   document.title  = \"Install Text Utils now\"\n  // }, 1500);\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(\"\");\n    }, 1500);\n  };\n  function toggleButton() {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  function changeColorRGB(text) {\n    let buttonText = text.target.innerText;\n    if (buttonText === \"R\") {\n      document.body.style.backgroundColor = \"#bf1111\";\n      document.body.style.color = \"white\";\n    } else if (buttonText === \"G\") {\n      document.body.style.backgroundColor = \"#14871a\";\n      document.body.style.color = \"white\";\n    } else if (buttonText === \"Bl\") {\n      document.body.style.backgroundColor = \"darkblue\";\n      document.body.style.color = \"white\";\n    } else if (buttonText === \"Br\") {\n      document.body.style.backgroundColor = \"brown\";\n      document.body.style.color = \"white\";\n    } else if (buttonText === \"Pi\") {\n      document.body.style.backgroundColor = \"#ab0ca6\";\n      document.body.style.color = \"white\";\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar\n        homeTitle=\"Tanveer Web\"\n        firstLink=\"Home\"\n        mode={mode}\n        toggleButton={toggleButton}\n        changeColorRGB={changeColorRGB}\n      /> */}\n      {/* <Navbar homeTitle ={2} firstLink= \"My Home\"/> */}\n      {/* <Navbar /> */}\n      {/* <AlertMsg showAlert={alert} />\n      <Textarea\n        heading=\"Enter your Text Below\"\n        mode={mode}\n        showAlert={showAlert}\n      /> */}\n      {/* <DarkMode/> */}\n      {/* <Router> */}\n\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n          <Navbar\n          homeTitle=\"Tanveer Web\"\n          firstLink=\"Home\"\n          secondLink=\"About\"\n          mode={mode}\n          toggleButton={toggleButton}\n          changeColorRGB={changeColorRGB}\n          />\n        <AlertMsg showAlert={alert} />\n            <DarkMode />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <Navbar\n          homeTitle=\"Tanveer Web\"\n          firstLink=\"Home\"\n          // secondLink=\"About\"\n          mode={mode}\n          toggleButton={toggleButton}\n          changeColorRGB={changeColorRGB}\n          />\n        <AlertMsg showAlert={alert} />\n            <Textarea\n              heading=\"Enter your Text Below\"\n              mode={mode}\n              showAlert={showAlert}\n            />\n          {/* </Route>\n          <Route exact path=\"*\">\n        <PageNotFound/>\n          </Route>\n        </Switch>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}